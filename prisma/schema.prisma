// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema



datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
  referentialIntegrity = "prisma"
}

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["referentialIntegrity"]
}


model Account {
  id                 String    @id @default(cuid())
  userId             String
  providerType       String
  providerId         String
  providerAccountId  String
  refreshToken       String?
  accessToken        String?
  accessTokenExpires DateTime?
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt
  user               User      @relation(fields: [userId], references: [id])
  @@unique([providerId, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  accessToken  String   @unique
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  password      String?
  image         String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  accounts      Account[]
  sessions      Session[]
  bikes         Bike[]
}

model Bike {
  id            String   @id @default(cuid())

  createdAt     DateTime  @default(now())
  published     Boolean?  @default(false)

  userId        String
  user          User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  brand         String?
  model         String?
  category      String?
  year          String?
  framesize     String?

  condition     String?

  location      String?
  lat           String?
  lng           String?

  framematerial String?
  braketype     String?
  color         String?

  equipments    Equipment[]

  description   String?
  pictures      BikePicture[]

  price         String?

  @@index([userId])
}

model BikePicture {
  id  String @id @default(cuid())

  bikeId String
  bike Bike @relation(fields: [bikeId], references: [id], onDelete: Cascade)

  url  String?
  alt  String?

  @@index([bikeId])
}

model Equipment {
  id    String   @id @default(cuid())
  name  String 

  bikeId String
  bike Bike @relation(fields: [bikeId], references: [id], onDelete: Cascade)

  @@index([bikeId])
}


model Brand {
  id   String @id @default(cuid())
  name String
  logo String?

  @@index([name(sort: Asc)])
}

model City {
  id   String @id @default(cuid())
  province String
  name String

  @@index([name(sort: Asc)])
}


model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime
  @@unique([identifier, token])
}
